unit UntServerMetodos;

interface

uses
  System.SysUtils, System.Classes, System.Json,
  Datasnap.DSServer, Datasnap.DSAuth, DataSnap.DSProviderDataModuleAdapter, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.Phys.IBBase, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet,

  FireDACJSONReflect
  ;

type
{$METHODINFO ON}
  TSrvServerMetodos = class(TDataModule)
    FDConexao: TFDConnection;
    FDPhysFBDriverLink1: TFDPhysFBDriverLink;
    qryTitulos: TFDQuery;
    qryTitulosID_TITULO: TIntegerField;
    qryTitulosTITULO: TStringField;
    qryTitulosSUBTITULO: TStringField;
    qryTitulosANO_LANCAMENTO: TIntegerField;
    qryTitulosFOTO: TBlobField;
    qryTitulosMINIATURA: TBlobField;
  private
    { Private declarations }
  public
    { Public declarations }
    function EchoString(Value: string): string;
    function ReverseString(Value: string): string;
    function GetTitulos: TFDJSONDataSets;
  end;
{$METHODINFO OFF}

implementation


{$R *.dfm}


uses System.StrUtils;

function TSrvServerMetodos.EchoString(Value: string): string;
begin
  Result := Value;
end;

function TSrvServerMetodos.ReverseString(Value: string): string;
begin
  Result := System.StrUtils.ReverseString(Value);
end;

end.

